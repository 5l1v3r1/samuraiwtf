---

- name: run the playbook tasks on the localhost from the ~/samuraiwtf folder
  hosts: 127.0.0.1
  connection: local
  tasks:

### Prerequisites

  - name: ensure prerequisite packages are installed
    yum:
      name: "{{ packages }}"
    become: yes
    vars:
      packages:
      - vim
      - curl
      - docker
      - unzip
      - python-pip

  - name: Check if docker-compose is already installed
    stat:
      path: /usr/local/bin/docker-compose
    register: stat_docker_compose

  - name: install docker-compose
    shell: 'curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose'
    become: yes
    when: stat_docker_compose.stat.exists == False 

  - name: set permissions for docker-compose
    file:
      path: /usr/local/bin/docker-compose
      mode: "+x"
    become: yes

  - name: Check if npm installer already downloaded
    stat:
      path: /tmp/npm_setup.sh
    register: stat_npm_setup

  - name: Download npm installer
    get_url:
      url: https://rpm.nodesource.com/setup_8.x
      dest: /tmp/npm_setup.sh
      mode: 0744
    when: stat_npm_setup.stat.exists == False

  - name: Install npm repo
    shell: '/tmp/npm_setup.sh'
    become: yes
    when: stat_npm_setup.stat.exists == False

  - name: Install nodejs
    yum:
      name: nodejs
      enablerepo: nodesource
    become: yes

## TODO: Figure out how to install Google Chrome

  - name: create the main Samurai program folder
    file:
      path: /opt/samurai
      state: directory
      owner: "{{ lookup('env','USER') }}"
      group: "{{ lookup('env','USER') }}"
    become: yes

### Install Tools

  - name: create burpsuite folder
    file:
      path: /opt/samurai/burpsuite
      state: directory

  - name: download burpsuite community
    get_url:
      url: https://portswigger.net/burp/releases/download?product=community&type=jar
      dest: /opt/samurai/burpsuite/burp.jar

  - name: create zap folder
    file:
      path: /opt/samurai/zap
      state: directory

  - name: Download and unzip ZAP
    unarchive:
      src: https://github.com/zaproxy/zaproxy/releases/download/2.6.0/ZAP_2.6.0_Crossplatform.zip
      dest: /opt/samurai/zap
      remote_src: yes

  - name: create Postman folder
    file:
      path: /opt/samurai/postman
      state: directory

  - name: Download and Postman
    unarchive:
      src: https://dl.pstmn.io/download/latest/linux64
      dest: /opt/samurai/
      remote_src: yes

  - name: fetch nikto from github
    git:
      repo: https://github.com/sullo/nikto.git
      dest: /opt/samurai/nikto
      depth: 1

  - name: fetch sqlmap from github
    git:
      repo: https://github.com/sqlmapproject/sqlmap.git
      dest: /opt/samurai/sqlmap
      depth: 1

  - name: fetch fuzzdb from github
    git:
      repo: https://github.com/fuzzdb-project/fuzzdb.git
      dest: /opt/samurai/fuzzdb
      depth: 1

  - name: fetch sqlmap from github
    git:
      repo: https://github.com/danielmiessler/SecLists.git
      dest: /opt/samurai/SecLists
      depth: 1

  - name: Copy launcher scripts
    copy:
      src: ../../config/launcher/
      dest: /usr/bin/
      owner: "{{ lookup('env','USER') }}"
      group: "{{ lookup('env','USER') }}"
      mode: 0744
    become: yes
 
  - name: Download burp plugin - co2
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/c5071c7a7e004f72ae485e8a72911afc
      dest: ~/Downloads/co2.bapp

  - name: Download burp plugin - paramalyzer
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/0ac13c45adff4e31a3ca8dc76dd6286c
      dest: ~/Downloads/paramalyzer.bapp

  - name: Download burp plugin - wsdler
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/594a49bb233748f2bc80a9eb18a2e08f
      dest: ~/Downloads/wsdler.bapp

# TODO: figure out how to add something to the menu

### Install Targets
  - name: create the targets directory
    file:
      path: /opt/targets
      state: directory
    become: yes

  - name: Check if Juice Shop tasks have already run
    stat:
      path: /tmp/juiceshop.latest
    register: stat_juiceshop_latest

  - name: Get the latest release page of Juice Shop
    get_url:
      url: https://github.com/bkimminich/juice-shop/releases/latest
      dest: /tmp/juiceshop.latest
    when: stat_juiceshop_latest.stat.exists == False

  - name: Create script for finding juice shop version
    copy:
      dest: /tmp/juice_version.sh
      content: |
        #!/bin/sh
        grep node8_linux_x64.tgz /tmp/juiceshop.latest | grep node8_linux_x64.tgz | grep href | cut -d '"' -f 2
      mode: 0744
    when: stat_juiceshop_latest.stat.exists == False

  - name: Get the path to the latest release of Juice Shop
    command: "/tmp/juice_version.sh"
    register: juiceshop_path
    when: stat_juiceshop_latest.stat.exists == False

  - name: Download and install Juice Shop app
    unarchive:
      src: "https://github.com{{ juiceshop_path.stdout }}"
      dest: /opt/targets/
      remote_src: yes
    become: yes
    when: stat_juiceshop_latest.stat.exists == False

