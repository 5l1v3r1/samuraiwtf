---

- name: run the playbook tasks on the localhost from the ~/samuraiwtf folder
  hosts: 127.0.0.1
  connection: local
  tasks:

### Prerequisites

  - name: Check if nginx is already installed
    stat:
      path: /etc/nginx/nginx.conf
    register: stat_nginx_conf

  - name: Install nginx
    command: "amazon-linux-extras install nginx1.12"
    become: yes
    when: stat_nginx_conf.stat.exists == False

  - name: ensure prerequisite packages are installed
    yum:
      name: "{{ packages }}"
    become: yes
    vars:
      packages:
      - vim
      - curl
      - docker
      - unzip
      - python-pip
      - php-fpm

  - name: python prerequisite modules
    pip:
      name: "{{ modules }}"
    become: yes
    vars:
      modules:
      - docker

  - name: Check if docker-compose is already installed
    stat:
      path: /usr/bin/docker-compose
    register: stat_docker_compose

  - name: install docker-compose
    shell: 'curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/bin/docker-compose'
    become: yes
    when: stat_docker_compose.stat.exists == False 

  - name: set permissions for docker-compose
    file:
      path: /usr/bin/docker-compose
      mode: "+x"
    become: yes

  - name: Check if npm installer already downloaded
    stat:
      path: /tmp/npm_setup.sh
    register: stat_npm_setup

  - name: Download npm installer
    get_url:
      url: https://rpm.nodesource.com/setup_8.x
      dest: /tmp/npm_setup.sh
      mode: 0744
    when: stat_npm_setup.stat.exists == False

  - name: Install npm repo
    shell: '/tmp/npm_setup.sh'
    become: yes
    when: stat_npm_setup.stat.exists == False

  - name: Install nodejs
    yum:
      name: nodejs
      enablerepo: nodesource
    become: yes

## TODO: Figure out how to install Google Chrome

  - name: create the main Samurai program folder
    file:
      path: /opt/samurai
      state: directory
      owner: "{{ lookup('env','USER') }}"
      group: "{{ lookup('env','USER') }}"
    become: yes

### Install Tools

  - name: create burpsuite folder
    file:
      path: /opt/samurai/burpsuite
      state: directory

  - name: download burpsuite community
    get_url:
      url: https://portswigger.net/burp/releases/download?product=community&type=jar
      dest: /opt/samurai/burpsuite/burp.jar

  - name: create zap folder
    file:
      path: /opt/samurai/zap
      state: directory

  - name: Download and unzip ZAP
    unarchive:
      src: https://github.com/zaproxy/zaproxy/releases/download/2.6.0/ZAP_2.6.0_Crossplatform.zip
      dest: /opt/samurai/zap
      remote_src: yes

  - name: create Postman folder
    file:
      path: /opt/samurai/postman
      state: directory

  - name: Download and install and Postman
    unarchive:
      src: https://dl.pstmn.io/download/latest/linux64
      dest: /opt/samurai/
      remote_src: yes

  - name: fetch nikto from github
    git:
      repo: https://github.com/sullo/nikto.git
      dest: /opt/samurai/nikto
      depth: 1

  - name: fetch sqlmap from github
    git:
      repo: https://github.com/sqlmapproject/sqlmap.git
      dest: /opt/samurai/sqlmap
      depth: 1

  - name: fetch fuzzdb from github
    git:
      repo: https://github.com/fuzzdb-project/fuzzdb.git
      dest: /opt/samurai/fuzzdb
      depth: 1

  - name: fetch sqlmap from github
    git:
      repo: https://github.com/danielmiessler/SecLists.git
      dest: /opt/samurai/SecLists
      depth: 1

  - name: Copy launcher scripts
    copy:
      src: ../../config/launcher/
      dest: /usr/bin/
      owner: "{{ lookup('env','USER') }}"
      group: "{{ lookup('env','USER') }}"
      mode: 0744
    become: yes
 
  - name: Download burp plugin - co2
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/c5071c7a7e004f72ae485e8a72911afc
      dest: /opt/burp_plugins/co2.bapp
    become: yes

  - name: Download burp plugin - paramalyzer
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/0ac13c45adff4e31a3ca8dc76dd6286c
      dest: /opt/burp_plugins/paramalyzer.bapp
    become: yes

  - name: Download burp plugin - wsdler
    get_url:
      url: https://portswigger.net/bappstore/bapps/download/594a49bb233748f2bc80a9eb18a2e08f
      dest: /opt/burp_plugins/wsdler.bapp
    become: yes

### Install Targets
  - name: create the targets directory
    file:
      path: /opt/targets
      state: directory
    become: yes

  - import_tasks: ../../targets/samurai-dojo/samurai-dojo.yml

  - import_tasks: ../../targets/juice-shop/juice-shop.yml

  - import_tasks: ../../targets/dvwa/dvwa.yml

  - import_tasks: ../../targets/mutillidae/mutillidae.yml

  - import_tasks: ../../targets/musashi/musashi-js.yml


### Update PHP Config
  - name: Update PHP listener
    replace:
      path: /etc/php-fpm.d/www.conf
      regexp: '^listen = 127.0.0.1.*'
      replace: 'listen = /var/run/php-fpm/php-fpm.sock'
    become: yes

  - name: Update PHP User
    replace:
      path: /etc/php-fpm.d/www.conf
      regexp: '^user = apache'
      replace: 'user = nginx'
    become: yes

  - name: Update PHP Group
    replace:
      path: /etc/php-fpm.d/www.conf
      regexp: '^group = apache'
      replace: 'group = nginx'
    become: yes

  - name: Add info.php test file
    copy:
      dest: /usr/share/nginx/html/info.php
      content: |
        <?php phpinfo(); ?>
      mode: 0644
      force: no

  - name: Install nginx configuration
    copy:
      src: ../../config/nginx/
      dest: /etc/nginx/conf.d/
      force: no
    become: yes

  - name: Start PHP Processor
    service:
      name: php-fpm
      state: started
      enabled: yes
    become: yes


  - name: Create service descriptor
    copy:
      dest: /etc/systemd/system/wtftargets.service
      content: |
        [Unit]
        Description=WTF Targets service
        After=systemd-user-sessions.service
        [Service]
        Type=forking
        ExecStart=/usr/local/bin/startup_targets.sh
      mode: 0744
    become: yes

  - name: Start nginx
    service:
      name: nginx
      state: started
      enabled: yes
    become: yes
   
  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

- import_playbook: menus.yml
